- name: Wait until etcd is running stable
  when: k8s_initialize_cluster_result.changed
  pause:
    minutes: 1

- name: Check if node is initialized
  when: inventory_hostname != k8s_initializer
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: k8s_node_initialized_result

- when: inventory_hostname == k8s_initializer
  block:
    - name: Create token to add controller nodes to cluster
      when: |
        ansible_play_hosts|select('in', k8s_controlnodes)|reject('eq', k8s_initializer)|map('extract', hostvars)|map(attribute='k8s_node_initialized_result.stat.exists')|select('eq', false)|length > 0
      args:
        executable: bash
      shell: |
        kubeadm token create --ttl=2h --print-join-command --certificate-key="$(kubeadm init phase upload-certs --upload-certs | tail -n 1)"
      register: k8s_join_controller_command_result

    - name: Create token to add worker nodes to cluster
      when: |
        ansible_play_hosts|select('in', k8s_workernodes)|map('extract', hostvars)|map(attribute='k8s_node_initialized_result.stat.exists')|select('eq', false)|length > 0
      args:
        executable: bash
      shell: |
        kubeadm token create --ttl=2h --print-join-command
      register: k8s_join_worker_command_result

- when:
    - inventory_hostname != k8s_initializer
    - not k8s_node_initialized_result.stat.exists
  block:
    - name: Add controller nodes to cluster
      throttle: 1
      when: inventory_hostname in k8s_controlnodes
      shell: |
        {{ hostvars[k8s_initializer].k8s_join_controller_command_result.stdout }} --apiserver-advertise-address={{ ansible_all_ipv4_addresses|ipaddr(k8s_ip_range_controlnode)|first }}

    - name: Add worker nodes to cluster
      throttle: 1
      when: inventory_hostname in k8s_workernodes
      shell: |
        {{ hostvars[k8s_initializer].k8s_join_worker_command_result.stdout }} --apiserver-advertise-address={{ ansible_all_ipv4_addresses|ipaddr(k8s_ip_range_workernode)|first }}

- name: Remove node-role.kubernetes.io/master taint from control nodes because there are no worker nodes
  when: k8s_initialize_cluster_result.changed and not k8s_workernodes
  shell: |
    set -e
    {% for node in k8s_controlnodes %}
    kubectl taint node {{ node }} node-role.kubernetes.io/master-
    {% endfor %}

- name: Set node info and remove uninitialized taint
  when:
    - not k8s_install_hcloud_ccm
    - (k8s_initializer and k8s_initialize_cluster_result.changed) or (not k8s_node_initialized_result.stat.exists)
  delegate_to: "{{ k8s_initializer }}"
  shell: |
    set -e
    kubectl patch node {{ inventory_hostname }} -p '{"spec":{"podCIDR":"{{ k8s_ip_range_node_pod }}"}}'
    kubectl label node {{ inventory_hostname }} node.kubernetes.io/instance-type={{ k8s_instance_type|quote }}
    kubectl label node {{ inventory_hostname }} topology.kubernetes.io/region={{ k8s_region|quote }}
    kubectl label node {{ inventory_hostname }} topology.kubernetes.io/zone={{ k8s_zone|quote }}
    kubectl taint node {{ inventory_hostname }} node.cloudprovider.kubernetes.io/uninitialized-
